@model (FanficModel, List<ChapterModel>, List<string>, bool)

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using CourseWork.Data
@inject ApplicationDbContext DbContext


    <script src="/lib/signalr/dist/browser/signalr.min.js"></script>
<div class="controller">

    <div class="d-flex flex-wrap justify-content-between align-items-center my-2">
        @*Заголовок*@
        <h3>@Model.Item1.Name.</h3>

        <p class="mb-0">@Localizer["Average"]: <span id="average">@Math.Round(Model.Item1.MarkAverage, 2)</span></p>

        @if (User.Identity.IsAuthenticated)
        {
            <div class="d-flex justify-content-end align-items-center mr-1" onmouseover="onMouseOver(event)" onmouseout="onMouseOut()">
                <img class="mr-2 markimg" height="40" src="/images/emptystar.png" data-mark="1" />
                <img class="mr-2 markimg" height="40" src="/images/emptystar.png" data-mark="2" />
                <img class="mr-2 markimg" height="40" src="/images/emptystar.png" data-mark="3" />
                <img class="mr-2 markimg" height="40" src="/images/emptystar.png" data-mark="4" />
                <img class="mr-2 markimg" height="40" src="/images/emptystar.png" data-mark="5" />
            </div>

            <script>
                let mark = 0;
                let images = document.getElementsByClassName("markimg");

                function setMark(value) {
                    for (let i = 0; i < value; i++) {
                        images[i].src = "/images/fullstar.png"
                    }
                    for (let i = value; i < 5; i++) {
                        images[i].src = "/images/emptystar.png"
                    }
                }

                function onMouseOver(event) {
                    if (event.target.tagName.toLowerCase() == "img") {
                        let tempMark = +event.target.dataset.mark;
                        setMark(tempMark);
                    }
                }

                function onMouseOut() {
                    setMark(mark);
                }

                function onImgClick(event) {
                    let tempMark = +event.target.dataset.mark;
                    hubConnection.invoke("ChangeMark", tempMark);
                }


                const hubConnection = new signalR.HubConnectionBuilder()
                    .withUrl("/Mark?fanficId=" + "@Model.Item1.Id")
                    .build();

                hubConnection.on('SetMark', function (value, aver) {
                    mark = value;
                    setMark(mark);
                    document.getElementById("average").innerHTML = aver;
                });

                for (let img of images) {
                    img.onclick = onImgClick;
                }

                hubConnection.start();
            </script>
        }
    </div>


    <div class="d-flex flex-wrap justify-content-between align-items-center my-2">
        <div>
            @Localizer["Fandom"]: @Model.Item1.Fandom.Name
        </div>

        <div>
            @*Закладки*@
            @if (User.Identity.IsAuthenticated)
            {
                @if (Model.Item4)
                {
                    <p>@Localizer["Added"]</p>
                }
                else
                {
                    <a href="/Fanfic/Bookmark/@Model.Item1.Id">@Localizer["Add"]</a>
                }
            }
        </div>
    </div>


    <div class="d-flex flex-wrap justify-content-start align-items-center my-2">
        @*Тэги*@
        @foreach (string tag in Model.Item3)
        {
            <div class="rounded bg-warning px-2 mx-1">
                @tag
            </div>
        }
    </div>

    <div class="p-2">
        @*Описание*@
        @Model.Item1.Description
    </div><hr>

    <div class="p-2 pl-4">
        <h5>@Localizer["Chapters"]</h5>
        @*Главы*@
        @foreach (var chapter in Model.Item2)
        {
            <p><a href="/Chapter/Index/@chapter.Id">@chapter.Name</a></p>
        }
    </div><hr>

    <h5>@Localizer["Comments"]</h5>
    <div class="mt-1">
        @*Комменты*@
        <div id="commentcontainer" class="px-2">
            @{
                var comments = DbContext.Comments.Where(c => c.FanficModelId == Model.Item1.Id).OrderBy(c => c.Date).ToList();
                foreach (var comment in comments)
                {
                    <div class="border border-secondary rounded p-2 mb-1">
                        <div class="d-flex justify-content-between">
                            <p>@comment.UserName</p>
                            <p>@comment.Date</p>
                        </div>
                        <div>
                            @comment.Text
                        </div>
                    </div>
                }
            }
        </div>

        <script>
            const commentHubConnection = new signalR.HubConnectionBuilder()
                .withUrl("/Comment?fanficId=" + "@Model.Item1.Id")
                .build();

            commentHubConnection.on('AddNewComment', function (text, username, date) {
                let container = document.getElementById("commentcontainer");

                let commentDiv = document.createElement("div");
                commentDiv.classList.add("border", "border-secondary", "rounded", "p-2", "mb-1");

                let firstDiv = document.createElement("div");
                firstDiv.classList.add("d-flex", "justify-content-between");

                let firstP = document.createElement("p");
                firstP.innerHTML = username;
                firstDiv.appendChild(firstP);

                let secondP = document.createElement("p");
                secondP.innerHTML = date;
                firstDiv.appendChild(secondP);

                commentDiv.appendChild(firstDiv);

                let secondDiv = document.createElement("div");
                secondDiv.innerHTML = text;

                commentDiv.appendChild(secondDiv);
                container.appendChild(commentDiv);
            });

            commentHubConnection.start();
        </script>

        @if (User.Identity.IsAuthenticated)
        {
            <script>
                function SendComment()
                {
                    let text = document.getElementById("commenttextarea").value;
                    let username = "@User.Identity.Name";
                    commentHubConnection.invoke("SendComment", text, username);
                }
            </script>
            <div>
                <textarea id="commenttextarea" class="form-control">
                </textarea>
                <input type="button" class="form-control" value="@Localizer["Send"]" onclick="SendComment()">
            </div>
        }
    </div>
</div>